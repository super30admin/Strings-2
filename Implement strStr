//TC:- O(m+n)
//SC:- O(needle)
class Solution {
    public int strStr(String haystack, String needle) {
        
        if(needle.length() == 0)
        {
            return 0;
        }
        
            int [] lps = lps(needle);
            int i = 0;
            int j = 0;
            
        
        
            
            
            while(i<haystack.length())
            {
                char cHaystack = haystack.charAt(i);
                char cNeedle = needle.charAt(j);
                
                if(cHaystack == cNeedle)
                {
                    i++;
                    j++;
                  
                    if(j==needle.length())
                    {
                        return i-j;
                    }
                }    
                    else if(cHaystack != cNeedle&& j != 0)
                    {
                        j = lps[j-1];
                    }
                    
                   else if(cHaystack != cNeedle&& j == 0)
                    {
                       i++;
                    }
                    
                }
           return -1;     
        }    
        
        
            
            private int[] lps(String needle)
            {
                int [] lps = new int[needle.length()];
                int i = 1;
                int j = 0;
                lps[0] = 0;
                
                while(i<needle.length())
                {
                   char ci = needle.charAt(i);
                   char cj = needle.charAt(j);
                    
                   if(ci == cj)
                    {
                            j++;
                            lps[i] = j;
                            i++;
                    }
                     else if(ci != cj && j != 0)
                    {
                        j = lps[j-1];
                        
                    }
                    else if(ci != cj && j == 0)
                    {
                        lps[i] = 0;
                        i++;
                        
                    }
                    
                   
                }
                
                return lps;
                
            }
        
    
}
