//time: O(n) coz traversing string at once forwards
//space: O(1)
class Solution {
    public List<Integer> findAnagrams(String s, String p) {
        HashMap<Character, Integer> map=new HashMap<>();
        List<Integer> res=new ArrayList<Integer>();
        int match=0;
        for(int i=0;i<p.length();i++)
        {
            char c= p.charAt(i);
            map.put(c,map.getOrDefault(c,0)+1);
        }
        for(int i=0;i<s.length();i++)
        {
            //incoming charcater
            char in=s.charAt(i);
            if(map.containsKey(in))
            {
                map.put(in, map.get(in)-1);
                if(map.get(in)==0)
                {
                    match++;
                }
            }
           //outgoing character
            if(i>=p.length())
            {
                  char out=s.charAt(i-p.length());
                if(map.containsKey(out))
                {
                    map.put(out, map.get(out)+1);
                    //if count is 1 menas it says char exist but as we removed from window it so do match-1
                    if(map.get(out)==1) match--;
                }
            }
            
             if(match==map.size())
            {
                res.add(i-p.length()+1);
            }
        }
        return res;
    }
}
