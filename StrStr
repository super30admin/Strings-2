class Solution {
    public int strStr(String haystack, String needle) {
        int m = needle.length();
        int n = haystack.length();
        
        if(m == 0) return 0;
        
        int[] lps = helper(needle);
        for( int i : lps){
            System.out.print(i+" ");
        }
        int i = 0;
        int j = 0;
        
        while(i < n){
        
            if(haystack.charAt(i) == needle.charAt(j)){
                i++;
                j++;
            }
        
            if(j == m) return i-j;
        
            if(i < n && haystack.charAt(i) != needle.charAt(j))
            {
            
                if(j == 0)
                {
                    i++;
                }
                else
                {
                    j = lps[j-1];
                }
            }
        }
        
        return -1;
        
    }
    
    public int[] helper(String needle){
        int j = 0;
        int i = 1;
        int[] lps = new int[needle.length()];
        lps[0] = 0;
        
        while(i < needle.length()){
            
         if(needle.charAt(i) == needle.charAt(j)){
                j++;
                lps[i] = j;
                i++;
        }
             else if(needle.charAt(i) != needle.charAt(j)){
                
                 if(j == 0)
                 {
                     lps[i] = j;
                     i++;
                 }
                 else
                 {
                    j = lps[j-1];
                 }
            }
        }
        return lps;
    }
}
